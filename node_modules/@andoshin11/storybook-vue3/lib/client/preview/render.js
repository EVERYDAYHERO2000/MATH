"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.propsContainer = void 0;
const ts_dedent_1 = require("ts-dedent");
const vue_1 = require("vue");
let mounted = false;
const activeComponent = vue_1.shallowRef(null);
exports.propsContainer = vue_1.reactive({ props: {} });
const root = vue_1.createApp({
    setup() {
        return () => {
            if (!activeComponent.value)
                throw new Error();
            return vue_1.h(activeComponent.value, exports.propsContainer.props);
        };
    }
});
function render({ storyFn, kind, name, args, showMain, showError, showException }) {
    // @ts-ignore
    root.config.errorHandler = showException;
    const element = storyFn();
    exports.propsContainer.props = args;
    if (!element) {
        showError({
            title: `Expecting a Vue component from the story: "${name}" of "${kind}".`,
            description: ts_dedent_1.default `
        Did you forget to return the Vue component from the story?
        Use "() => ({ template: '<my-comp></my-comp>' })" or "() => ({ components: MyComp, template: '<my-comp></my-comp>' })" when defining the story.
      `,
        });
        return;
    }
    showMain();
    activeComponent.value = element;
    if (!mounted) {
        root.mount('#root');
        mounted = true;
    }
}
exports.default = render;
//# sourceMappingURL=render.js.map